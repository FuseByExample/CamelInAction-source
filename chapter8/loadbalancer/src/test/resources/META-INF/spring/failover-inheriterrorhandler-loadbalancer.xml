<?xml version="1.0" encoding="UTF-8"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:camel="http://camel.apache.org/schema/spring"
       xsi:schemaLocation="
         http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
         http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

    <bean id="damn" class="java.lang.IllegalArgumentException">
        <constructor-arg index="0" value="Damn"/>
    </bean>

    <camelContext xmlns="http://camel.apache.org/schema/spring">

        <!-- define Camel error handler -->
        <errorHandler id="eh">
            <!-- retry at most 3 times with 2 sec delay -->
            <redeliveryPolicy maximumRedeliveries="3" redeliveryDelay="2000"
                              retriesExhaustedLogLevel="WARN" retryAttemptedLogLevel="WARN" logStackTrace="false"/>
        </errorHandler>

        <route id="start" errorHandlerRef="eh">
            <from uri="direct:start"/>
            <!-- let the load balancer inherit and use the Camel error handler -->
            <loadBalance inheritErrorHandler="true">
                <!-- use the load balancer EIP with failover -->
                <failover maximumFailoverAttempts="1"/>
                <to uri="direct:a"/>
                <to uri="direct:b"/>
            </loadBalance>
        </route>

        <!-- service A -->
        <route>
            <from uri="direct:a"/>
            <log message="A received: ${body}"/>
            <choice>
                <!-- in case of Kaboom the throw an exception to simulate failure -->
                <when>
                    <simple>${body} contains 'Kaboom'</simple>
                    <throwException ref="damn"/>
                </when>
            </choice>
            <to uri="mock:a"/>
        </route>

        <!-- service B -->
        <route>
            <from uri="direct:b"/>
            <log message="B received: ${body}"/>
            <to uri="mock:b"/>
        </route>

    </camelContext>

</beans>
